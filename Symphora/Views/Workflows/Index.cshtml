@model IEnumerable<Symphora.Models.Workflow>
@{
    ViewData["Title"] = "My Workflows";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="display-4">My Workflows</h1>
    <a asp-controller="Workflows" asp-action="Builder" class="btn btn-primary">
        <i class="fas fa-plus"></i> Create New Workflow
    </a>
</div>

@if (Model.Any())
{
    <div class="row">
        @foreach (var workflow in Model)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">@workflow.Name</h5>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(workflow.Description))
                        {
                            <p class="card-text text-muted">@workflow.Description</p>
                        }
                        else
                        {
                            <p class="card-text text-muted fst-italic">No description</p>
                        }
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <small class="text-muted">
                                Updated: @workflow.UpdatedAt.ToString("MMM dd, yyyy")
                            </small>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="btn-group w-100" role="group">
                            <a asp-controller="WorkflowExecution" asp-action="Dashboard" asp-route-workflowId="@workflow.Id" 
                               class="btn btn-success btn-sm">
                                <i class="fas fa-play"></i> Execute
                            </a>
                            <a asp-controller="Workflows" asp-action="Builder" asp-route-id="@workflow.Id" 
                               class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <button type="button" class="btn btn-outline-danger btn-sm" 
                                    onclick="deleteWorkflow('@workflow.Id', '@workflow.Name')">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-project-diagram fa-3x text-muted mb-3"></i>
        <h3 class="text-muted">No workflows yet</h3>
        <p class="text-muted">Create your first workflow to get started with automation.</p>
        <a asp-controller="Workflows" asp-action="Builder" class="btn btn-primary btn-lg">
            <i class="fas fa-plus"></i> Create Your First Workflow
        </a>
    </div>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Workflow</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the workflow "<span id="workflowName"></span>"? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let workflowToDelete = null;
        
        function deleteWorkflow(id, name) {
            workflowToDelete = id;
            document.getElementById('workflowName').textContent = name;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }
        
        document.getElementById('confirmDelete').addEventListener('click', async function() {
            if (workflowToDelete) {
                try {
                    const response = await fetch(`/api/workflow/${workflowToDelete}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to delete workflow. Please try again.');
                    }
                } catch (error) {
                    console.error('Error deleting workflow:', error);
                    alert('Failed to delete workflow. Please try again.');
                }
            }
            
            bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
        });
    </script>
}