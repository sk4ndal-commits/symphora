@model IEnumerable<Symphora.Models.Workflow>
@{
    ViewData["Title"] = "My Workflows";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="display-4 mb-1">
            <i class="fas fa-project-diagram me-3 text-primary"></i>My Workflows
        </h1>
        <p class="text-muted">Manage and execute your intelligent automation workflows</p>
    </div>
    <div>
        <a asp-controller="Workflows" asp-action="Builder" class="btn btn-ai-primary">
            <i class="fas fa-plus me-2"></i>Create New Workflow
        </a>
    </div>
</div>

@if (Model.Any())
{
    <div class="row g-4">
        @foreach (var workflow in Model)
        {
            <div class="col-md-6 col-lg-4">
                <div class="ai-card h-100">
                    <div class="card-body p-4">
                        <div class="d-flex align-items-center mb-3">
                            <div class="ai-card-gradient rounded-circle d-inline-flex align-items-center justify-content-center me-3" 
                                 style="width: 50px; height: 50px;">
                                <i class="fas fa-project-diagram text-white"></i>
                            </div>
                            <div class="flex-grow-1">
                                <h5 class="card-title mb-1">@workflow.Name</h5>
                                <span class="badge bg-primary">Workflow</span>
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(workflow.Description))
                        {
                            <p class="card-text text-muted mb-3">@workflow.Description</p>
                        }
                        else
                        {
                            <p class="card-text text-muted fst-italic mb-3">No description provided</p>
                        }
                        
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <small class="text-muted">
                                <i class="fas fa-clock me-1"></i>
                                Updated: @workflow.UpdatedAt.ToString("MMM dd, yyyy")
                            </small>
                            <span class="badge bg-success">Active</span>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <a asp-controller="WorkflowExecution" asp-action="Dashboard" asp-route-workflowId="@workflow.Id" 
                               class="btn btn-ai-success">
                                <i class="fas fa-play me-2"></i>Execute Workflow
                            </a>
                            <div class="btn-group" role="group">
                                <a asp-controller="Workflows" asp-action="Builder" asp-route-id="@workflow.Id" 
                                   class="btn btn-ai-secondary btn-sm">
                                    <i class="fas fa-edit me-1"></i>Edit
                                </a>
                                <button type="button" class="btn btn-outline-danger btn-sm" 
                                        onclick="deleteWorkflow('@workflow.Id', '@workflow.Name')">
                                    <i class="fas fa-trash me-1"></i>Delete
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <div class="ai-pulse">
            <div class="ai-card-gradient rounded-circle d-inline-flex align-items-center justify-content-center mb-4" 
                 style="width: 120px; height: 120px;">
                <i class="fas fa-project-diagram fa-4x text-white"></i>
            </div>
        </div>
        <h3 class="mb-3">No Workflows Created Yet</h3>
        <p class="text-muted mb-4">
            Start building your intelligent automation by creating your first workflow. 
            Design, test, and deploy AI-powered processes with ease.
        </p>
        <a asp-controller="Workflows" asp-action="Builder" class="btn btn-ai-primary btn-lg">
            <i class="fas fa-plus me-2"></i>Create Your First Workflow
        </a>
    </div>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content ai-card">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Delete Workflow
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="alert alert-warning d-flex align-items-center mb-3">
                    <i class="fas fa-warning me-2"></i>
                    <span>This action cannot be undone!</span>
                </div>
                <p class="mb-0">
                    Are you sure you want to permanently delete the workflow 
                    "<strong id="workflowName"></strong>"? All associated data and execution history will be lost.
                </p>
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>Cancel
                </button>
                <button type="button" class="btn btn-danger" id="confirmDelete">
                    <i class="fas fa-trash me-1"></i>Delete Workflow
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let workflowToDelete = null;
        
        function deleteWorkflow(id, name) {
            workflowToDelete = id;
            document.getElementById('workflowName').textContent = name;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }
        
        document.getElementById('confirmDelete').addEventListener('click', async function() {
            if (workflowToDelete) {
                try {
                    const response = await fetch(`/api/workflow/${workflowToDelete}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to delete workflow. Please try again.');
                    }
                } catch (error) {
                    console.error('Error deleting workflow:', error);
                    alert('Failed to delete workflow. Please try again.');
                }
            }
            
            bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
        });
    </script>
}